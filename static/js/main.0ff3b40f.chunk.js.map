{"version":3,"sources":["Components/Context/ContextAPi.js","assets/images/TMiBot.svg","Components/Channel/AutoScroll.js","Components/Modal/ChannelMember.js","Components/Channel/Channel.js","Components/Motivate/Motivate.js","Components/Channel/HomeChannel.js","Components/API/callAPI.js","assets/images/CatBG.jpg","assets/images/sample.jpg","assets/images/Logo.svg","Components/Login/Login.js","Components/Channel/AddChannelModal.js","Components/UserSearch/UserSearch.js","Components/Modal/MyAccount.js","Components/UserMessage/Message.js","Components/Modal/DirectMessage.js","Components/Modal/AllUserSearch.js","Components/Main/Main.js","Components/Registration/Registration.js","App.js","reportWebVitals.js","index.js"],"names":["ContextAPI","createContext","AutoScroll","elementRef","useRef","useEffect","current","scrollIntoView","ref","useStyles","makeStyles","root","position","right","top","cursor","minWidth","minHeight","background","display","justifyContent","alignItems","borderRadius","addPeople","height","width","aboutChannel","margin","padding","border","lineHeight","aboutChannelID","marginLeft","fontWeight","fontSize","color","aboutDescriptions","borderTop","aboutHeader","addMembers","aboutSubHeader","addUserIcon","channelName","paddingLeft","container","paddingTop","dialog","marginBottom","dialogChannelName","dialogInput","marginTop","outline","dialogTitle","members","memberContainer","overflowY","memberImg","backgroundColor","memberListContainer","memberName","memberSearch","left","transform","modal","modalBody","searchIcon","zIndex","tabBar","borderBottom","user","ChannelMember","classes","useState","modalDisplay","setModalDisplay","dialogDisplay","setDialogDisplay","errorDisplay","setErrorDisplay","errorMessage","setErrorMessage","searchTerm","setSearchTerm","setDialogInput","tabIndex","setTabIndex","filterMember","setFilterMember","searchMember","dialogInputVal","handleClose","handleDialogDisplay","useContext","allUsers","authKey","setAllUsers","apiData","setApiData","apiHeaders","setApiHeaders","channelData","setAuthKey","tokenValue","setTokenValue","channelMembers","setChannelData","channelID","setchannelID","setChannelMembers","channelMessage","setchannelMessage","fetchFilterMembers","setFetchFilterMembers","channelMemberList","map","member","user_id","filteredMembers","filter","users","includes","id","setTimeout","channelCreateDate","Date","created_at","toLocaleDateString","year","month","day","onClick","className","AvatarGroup","max","val","Avatar","alt","uid","src","memberTab","style","onChange","e","value","console","log","type","placeholder","JSON","stringify","key","aboutTab","name","paddingBottom","owner_id","memberListModal","Typography","variant","Tabs","indicatorColor","textColor","event","newIndex","Tab","label","TabPanel","index","Modal","open","onClose","Dialog","maxWidth","DialogTitle","DialogContent","Snackbar","anchorOrigin","vertical","horizontal","Alert","errors","severity","DialogActions","Button","axios","url","method","headers","accessToken","client","accessClient","expiry","accessExpiry","accessUID","data","member_id","then","res","channel_members","catch","err","props","children","theme","breakpoints","up","input","bottom","sendIcon","marginRight","contentDisplay","channelNameContainer","emojiPicker","mySpace","bot","message","button","welcomeContainer","flexDirection","welcome","welcomeText","messageAdornment","messageIcons","StyledBadge","withStyles","badge","boxShadow","palette","paper","animation","content","opacity","Badge","Channel","userName","setUserName","inputValue","messageView","messageInput","setMessageInput","newMessage","setNewMessage","showPicker","setShowPicker","params","receiver_id","receiver_class","sendMessage","body","Grid","item","xs","TMiBot","timestamp","overlap","sender","toLocaleTimeString","hour","minute","onKeyDown","pickerStyle","onEmojiClick","emojiObject","prev","emoji","Motivate","openMotivate","setOpenMotivate","author","bodyRoot","textAlign","botImg","copy","quote","setQuote","quotes","random","Math","floor","length","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","HomeChannel","messages","setMessages","timeStamp","time","getHours","getMinutes","toString","auth","setAuth","localStorage","getItem","parse","push","setItem","defaults","baseURL","containerBackground","overflow","containerDiv","direction","sideImageContainer","sideImage","headerLogin","fontFamily","buttonLogin","footerContainer","footerOne","footerTwo","Login","history","useHistory","emailInput","passInput","email","setEmail","password","setPassword","errorMsg","setErrorMsg","handleErrorDisplay","handleLogin","preventDefault","token","userDisplayName","split","authData","sm","md","containerLoginForm","Box","sx","my","mx","TextField","size","required","target","evt","FormControlLabel","control","Checkbox","remember","CatBG","header","bodyCopy","lockIcon","switch","letterSpacing","infoIcon","closeButton","AddChannelModal","setModalOpen","closeModal","channelDescription","modalClose","setModalClose","nameInputValue","setNameInputValue","descriptionValue","setDescriptionValue","switchState","setSwitchState","headerPrivate","setheaderPrivate","privateDetails","setPrivateDetails","setLockIcon","InputBase","Switch","checked","user_ids","down","searchResults","UserSearch","openUserModal","setOpenUserModal","searchBar","setSearchBar","setAllUsersInfo","accountIcon","chip","flexWrap","spacing","MyAccount","profileModalOpen","setProfileModalOpen","allChannels","setAllChannels","Chip","userNameContainer","Message","userMessages","setUserMessages","receiverID","receiverUN","setReceiverID","setReceiverUN","inputMsg","setInputMsg","scrollRef","refresh","response","buttonContainer","head","DirectMessage","sendMessageModalOpen","setSendMessageModalOpen","setMessageDisplay","messageDisplay","inputVal","setInputValue","sendMessageModal","i","faceIcon","info","userInfo","AllUserSearch","allUsersInfo","userInfoName","userModal","drawerWidth","drawer","flexShrink","appBar","drawerPaper","overflowX","menuButton","menuBarText","menuBarTitle","createIcon","menuIconColor","toolbar","subMessages","textDecoration","workspace","borderRight","workspaceItem","mainContent","logoContainer","logo","addChannel","userDM","channelList","addIcon","myAccount","Main","anchorEl","setAnchorEl","channelExpand","setChannelExpand","dmExpand","setDmExpand","mobileOpen","setMobileOpen","searchResult","setSearchResult","modalOpen","sessionKey","handleDrawerToggle","Logo","List","ListItem","ListItemIcon","ListItemText","primary","Collapse","unmountOnExit","to","path","component","AppBar","elevation","Toolbar","IconButton","startAdornment","InputAdornment","currentTarget","Menu","keepMounted","Boolean","MenuItem","removeItem","Hidden","smUp","implementation","Drawer","anchor","ModalProps","xsDown","avatarOne","headerCreate","newsletterContainer","newsletter","buttonSignUp","errorPass","Registration","confirmPassInput","success","setSuccess","error","setError","confirmPassword","setConfirmPassword","square","password_confirmation","full_messages","href","rel","autoHideDuration","reason","App","setUser","Provider","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ff3b40f.chunk.js","sourcesContent":["import React, { createContext } from 'react'\r\n\r\nexport const ContextAPI = createContext();","export default __webpack_public_path__ + \"static/media/TMiBot.d00e8ce6.svg\";","import React, { useRef, useEffect } from 'react'\r\n\r\nconst AutoScroll = () => {\r\n\r\n    //special component to display latest message\r\n    const elementRef = useRef();\r\n    useEffect(() => elementRef.current.scrollIntoView(), []);\r\n\r\n    return (\r\n        <div ref={elementRef}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutoScroll\r\n","import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AppBar,\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Modal,\r\n  Snackbar,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { AvatarGroup, Alert } from \"@material-ui/lab\";\r\nimport { ContextAPI } from \"../Context/ContextAPi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"absolute\",\r\n    right: \"5rem\",\r\n    top: \"0.6rem\",\r\n    cursor: \"pointer\",\r\n    minWidth: \"7em\",\r\n    minHeight: \"2.9em\",\r\n    background: \"lightgray\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"32.5px\",\r\n  },\r\n  addPeople: {\r\n    height: \"30vh\",\r\n    width: \"50vh\",\r\n    background: \"#ECF0F1\",\r\n    borderRadius: \"9px\",\r\n  },\r\n  aboutChannel: {\r\n    margin: \"2rem 2rem\",\r\n    padding: \"1rem 0\",\r\n    borderRadius: \"12px\",\r\n    border: \"1px solid #C2C1C1\",\r\n    lineHeight: \"1.5rem\",\r\n  },\r\n  aboutChannelID: {\r\n    marginLeft: \"2.4rem\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"0.95rem\",\r\n    color: \"#727070\",\r\n  },\r\n  aboutDescriptions: {\r\n    padding: \"1rem 0\",\r\n    borderTop: \"1px solid #C2C1C1\",\r\n  },\r\n  aboutHeader: {\r\n    marginLeft: \"2rem\",\r\n    color: \"#3F3F3F\",\r\n    fontSize: \"1.1rem\",\r\n    fontWeight: \"600\",\r\n  },\r\n  addMembers: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    height: \"3.7rem\",\r\n  },\r\n  aboutSubHeader: {\r\n    marginLeft: \"2rem\",\r\n    fontWeight: \"lighter\",\r\n    fontSize: \"0.9rem\",\r\n  },\r\n  addUserIcon: {\r\n    height: \"2.2rem\",\r\n    width: \"2.2rem\",\r\n    marginLeft: \"2.4rem\",\r\n    color: \"#727070\",\r\n  },\r\n  channelName: {\r\n    color: \"#3F3F3F\",\r\n    paddingLeft: \"1.8em\",\r\n  },\r\n  container: {\r\n    paddingTop: \"2em\",\r\n  },\r\n  dialog: {\r\n    marginBottom: \"3em\",\r\n  },\r\n  dialogChannelName: {\r\n    position: \"absolute\",\r\n    paddingLeft: \"1.8em\",\r\n    paddingTop: \"3.3em\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"0.95rem\",\r\n    color: \"#9B9A9A\",\r\n  },\r\n  dialogInput: {\r\n    width: \"100%\",\r\n    height: \"2.8em\",\r\n    marginTop: \"1.4rem\",\r\n    paddingLeft: \"1rem\",\r\n    outline: \"none\",\r\n    border: \"1px solid #C6C2C2\",\r\n    borderRadius: \"5px\",\r\n    fontSize: \"1.1rem\",\r\n  },\r\n  dialogTitle: {\r\n    color: \"#3F3F3F\",\r\n  },\r\n  members: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    height: \"3.7rem\",\r\n  },\r\n  memberContainer: {\r\n    overflowY: \"scroll\",\r\n    height: \"47vh\",\r\n  },\r\n  memberImg: {\r\n    height: \"1.7em\",\r\n    width: \"1.7em\",\r\n    backgroundColor: \"lightcoral\",\r\n    marginLeft: \"2.4rem\",\r\n  },\r\n  memberListContainer: {\r\n    paddingTop: \"5em\",\r\n  },\r\n  memberName: {\r\n    marginLeft: \"1rem\",\r\n  },\r\n  memberSearch: {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    width: \"85%\",\r\n    marginTop: \"1.2rem\",\r\n    height: \"2.4rem\",\r\n    border: \"1px solid #C6C2C2\",\r\n    borderRadius: \"4px\",\r\n    background: \"#ECF0F1\",\r\n    paddingLeft: \"3em\",\r\n    outline: \"none\",\r\n    fontSize: \"0.95rem\",\r\n    color: \"#3F3F3F\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modalBody: {\r\n    height: \"80vh\",\r\n    width: \"60vh\",\r\n    background: \"#ECF0F1\",\r\n    borderRadius: \"9px\",\r\n  },\r\n  searchIcon: {\r\n    position: \"absolute\",\r\n    marginTop: \"1.7rem\",\r\n    marginLeft: \"3.5rem\",\r\n    height: \"1.3rem\",\r\n    width: \"1.3rem\",\r\n    color: \"#9B9A9A\",\r\n    zIndex: \"2\",\r\n  },\r\n  tabBar: {\r\n    marginTop: \"2rem\",\r\n    borderBottom: \"1px solid #CECDCD\",\r\n    height: \"3em\",\r\n  },\r\n  user: {\r\n    height: \"1.7em\",\r\n    width: \"1.7em\",\r\n    backgroundColor: \"lightcoral\",\r\n  },\r\n});\r\n\r\nconst ChannelMember = () => {\r\n  const classes = useStyles();\r\n\r\n  //declaring states\r\n  const [modalDisplay, setModalDisplay] = useState(false);\r\n  const [dialogDisplay, setDialogDisplay] = useState(false);\r\n  const [errorDisplay, setErrorDisplay] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [dialogInput, setDialogInput] = useState(\"\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const [filterMember, setFilterMember] = useState([]);\r\n\r\n  //declaring reference for the input to search member\r\n  const searchMember = useRef();\r\n  const dialogInputVal = useRef();\r\n\r\n  const handleClose = () => {\r\n    setModalDisplay(!modalDisplay);\r\n  };\r\n\r\n  const handleDialogDisplay = () => {\r\n    setDialogDisplay(!dialogDisplay);\r\n  };\r\n\r\n  const handleDialogInputValue = () => {\r\n    setDialogInput(dialogInputVal.current.value);\r\n  };\r\n\r\n  const handleErrorDisplay = () => {\r\n    setErrorDisplay(true);\r\n    setTimeout(() => {\r\n      setErrorDisplay(false);\r\n    }, 3500);\r\n  };\r\n\r\n  //declaring functions to handle events\r\n  const handleSearchMemberInput = (e) => {\r\n    setSearchTerm(searchMember.current.value);\r\n    console.log(searchTerm);\r\n  };\r\n\r\n  const handleTabChange = (event, newIndex) => {\r\n    setTabIndex(newIndex);\r\n  };\r\n\r\n  //declaring Contexts for API data\r\n  const {\r\n    allUsers,\r\n    setAllUsers,\r\n    apiData,\r\n    setApiData,\r\n    apiHeaders,\r\n    setApiHeaders,\r\n    authKey,\r\n    setAuthKey,\r\n    tokenValue,\r\n    setTokenValue,\r\n    channelData,\r\n    setChannelData,\r\n    channelID,\r\n    setchannelID,\r\n    channelMembers,\r\n    setChannelMembers,\r\n    channelMessage,\r\n    setchannelMessage,\r\n    fetchFilterMembers,\r\n    setFetchFilterMembers,\r\n  } = useContext(ContextAPI);\r\n\r\n  useEffect(() => {\r\n    const channelMemberList = channelMembers.map((member) => member.user_id);\r\n    const filteredMembers = allUsers.filter((users) =>\r\n      channelMemberList.includes(users.id)\r\n    );\r\n    setTimeout(() => {\r\n      setFilterMember([...filteredMembers]);\r\n    }, 300);\r\n  }, [channelMembers]);\r\n\r\n  //function to handle invite of user to the channel\r\n  const inviteUser = () => {\r\n    axios({\r\n      url: \"https://slackapi.avionschoo/api/v1/channel/add_member\",\r\n      method: \"POST\",\r\n      headers: {\r\n        \"access-token\": authKey.accessToken,\r\n        client: authKey.accessClient,\r\n        expiry: authKey.accessExpiry,\r\n        uid: authKey.accessUID,\r\n      },\r\n      data: {\r\n        id: channelData.id,\r\n        member_id: 123, //value from the input\r\n      },\r\n    })\r\n      .then((res) => {\r\n        //handling errors received\r\n        if (res.data.errors) {\r\n          setErrorMessage(res.data.errors);\r\n          handleErrorDisplay();\r\n        }\r\n        setChannelMembers(res.data.data.channel_members);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  //declaring variable for the date the channel was created\r\n  const channelCreateDate = new Date(channelData.created_at).toLocaleDateString(\r\n    \"en-US\",\r\n    { year: \"numeric\", month: \"short\", day: \"numeric\" }\r\n  );\r\n\r\n  const members = (\r\n    <div onClick={handleClose} className={classes.root}>\r\n      <AvatarGroup max={3}>\r\n        {channelMembers.map((val) => {\r\n          return (\r\n            <Avatar\r\n              className={classes.user}\r\n              alt={val.uid}\r\n              src=\"/static/images/avatar/1.jpg\"\r\n            />\r\n          );\r\n        })}\r\n      </AvatarGroup>\r\n    </div>\r\n  );\r\n\r\n  const memberTab = (\r\n    <div style={{ position: \"relative\" }}>\r\n      <SearchIcon className={classes.searchIcon} />\r\n      <input\r\n        onChange={handleSearchMemberInput}\r\n        value={searchTerm}\r\n        ref={searchMember}\r\n        className={classes.memberSearch}\r\n        type=\"text\"\r\n        placeholder=\"Find members\"\r\n      />\r\n      <div\r\n        onClick={handleDialogDisplay}\r\n        className={classes.memberListContainer}\r\n      >\r\n        <div className={`${classes.addMembers} addPeople`}>\r\n          <PersonAddIcon className={classes.addUserIcon} />\r\n          <h4 className={classes.memberName}>Add people</h4>\r\n        </div>\r\n        <div className={classes.memberContainer}>\r\n          {filterMember\r\n            .filter((val) => {\r\n              if (searchTerm === \"\") {\r\n                return val;\r\n              } else if (JSON.stringify(val).includes(searchTerm)) {\r\n                return val;\r\n              }\r\n              return false;\r\n            })\r\n            .map((val, key) => {\r\n              const user = val.uid; /* .split(\"@\")[0]; */\r\n              return (\r\n                <div key={key} className={`${classes.members} addPeople`}>\r\n                  <Avatar\r\n                    className={classes.memberImg}\r\n                    alt={user}\r\n                    src={val.user_id}\r\n                  />\r\n                  <h4 className={classes.memberName}>{user}</h4>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const aboutTab = (\r\n    <div className={classes.aboutTab}>\r\n      <div className={classes.aboutChannel}>\r\n        <h4 className={classes.aboutHeader}>Channel Name</h4>\r\n        <h5 className={classes.aboutSubHeader}>{`# ${channelData.name}`}</h5>\r\n      </div>\r\n      <div className={classes.aboutChannel}>\r\n        <div style={{ paddingBottom: \"1rem\" }}>\r\n          <h4 className={classes.aboutHeader}>Topic</h4>\r\n          <h5 className={classes.aboutSubHeader} style={{ color: \"#959595\" }}>\r\n            Add a topic\r\n          </h5>\r\n        </div>\r\n        <div className={classes.aboutDescriptions}>\r\n          <h4 className={classes.aboutHeader}>Description</h4>\r\n          <h5 className={classes.aboutSubHeader}>\r\n            This <strong>channel</strong> is for working on a project. Hold\r\n            meetings, share docs, and make decisions together with your team.\r\n          </h5>\r\n        </div>\r\n        <div className={classes.aboutDescriptions}>\r\n          <h4 className={classes.aboutHeader}>Created by</h4>\r\n          <h5\r\n            className={classes.aboutSubHeader}\r\n          >{`Owner id: ${channelData.owner_id} on ${channelCreateDate}`}</h5>\r\n        </div>\r\n      </div>\r\n      <h5 className={classes.aboutChannelID}>Channel ID: {channelData.id}</h5>\r\n    </div>\r\n  );\r\n\r\n  const memberListModal = (\r\n    <div className={classes.modalBody}>\r\n      <div className={classes.container}>\r\n        <Typography className={classes.channelName} variant=\"h5\">\r\n          {`# ${channelData.name}`}\r\n        </Typography>\r\n        <div className={classes.tabBar}>\r\n          <Tabs\r\n            style={{ marginLeft: \"2.85em\" }}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            value={tabIndex}\r\n            onChange={handleTabChange}\r\n          >\r\n            <Tab label=\"Members\" />\r\n            <Tab label=\"About\" />\r\n          </Tabs>\r\n        </div>\r\n        <TabPanel value={tabIndex} index={0}>\r\n          {memberTab}\r\n        </TabPanel>\r\n        <TabPanel value={tabIndex} index={1}>\r\n          {aboutTab}\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {members}\r\n      <Modal\r\n        className={classes.modal}\r\n        open={modalDisplay}\r\n        onClose={handleClose}\r\n      >\r\n        {memberListModal}\r\n      </Modal>\r\n      <Dialog\r\n        maxWidth=\"sm\"\r\n        className={classes.dialog}\r\n        open={dialogDisplay}\r\n        onClose={handleDialogDisplay}\r\n      >\r\n        <DialogTitle className={classes.dialogTitle}>Add People</DialogTitle>\r\n        <h5 className={classes.dialogChannelName}>{`# ${channelData.name}`}</h5>\r\n        <DialogContent>\r\n          <input\r\n            onChange={handleDialogInputValue}\r\n            value={dialogInput}\r\n            ref={dialogInputVal}\r\n            className={classes.dialogInput}\r\n            type=\"text\"\r\n            placeholder=\"Enter a user id\"\r\n          ></input>\r\n          {errorDisplay ? (\r\n            <Snackbar\r\n              anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n              open=\"true\"\r\n            >\r\n              <Alert\r\n                className={classes.errors}\r\n                severity=\"error\"\r\n                variant=\"filled\"\r\n              >\r\n                {errorMessage}\r\n              </Alert>\r\n            </Snackbar>\r\n          ) : null}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={inviteUser} color=\"primary\">\r\n            Invite\r\n          </Button>\r\n          <Button onClick={handleDialogDisplay} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChannelMember;\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index } = props;\r\n\r\n  return <div>{value === index && <div>{children}</div>}</div>;\r\n}\r\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { ContextAPI } from \"../Context/ContextAPi\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport SentimentSatisfiedOutlinedIcon from \"@material-ui/icons/SentimentSatisfiedOutlined\";\r\nimport ImageOutlinedIcon from \"@material-ui/icons/ImageOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport TMiBot from \"../../assets/images/TMiBot.svg\";\r\nimport AutoScroll from \"./AutoScroll\";\r\nimport axios from \"axios\";\r\nimport ChannelMember from \"../Modal/ChannelMember\";\r\nimport Picker from \"emoji-picker-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"83vw\",\r\n      marginLeft: \"325px\",\r\n    },\r\n    position: \"fixed\",\r\n    background: \"#ECF0F1\",\r\n    left: \"0\",\r\n    top: \"64px\",\r\n    bottom: \"0\",\r\n    right: \"0\",\r\n  },\r\n  input: {\r\n    width: \"98%\",\r\n    height: \"10%\",\r\n    border: \"1px solid black\",\r\n    backgroundColor: \"#ECF0F1\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    marginLeft: \"1%\",\r\n    marginBottom: \"1rem\",\r\n    paddingLeft: \"2em\",\r\n    paddingBottom: \"2.5em\",\r\n    borderRadius: \"4px\",\r\n    fontSize: \"1rem\",\r\n    outline: \"none\",\r\n  },\r\n  sendIcon: {\r\n    marginRight: \"1rem\",\r\n    cursor: \"pointer\",\r\n    color: \"rgba(43, 33, 24, 0.65)\",\r\n  },\r\n  contentDisplay: {\r\n    height: \"77vh\",\r\n    width: \"calc(100% + 1px)\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  channelNameContainer: {\r\n    height: \"5vh\",\r\n    width: \"calc(100% + 1px)\",\r\n    marginTop: \"1rem\",\r\n    borderBottom: \"1px solid rgba(43, 33, 24, 0.25)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  emojiPicker: {\r\n    paddingBottom: \"4em\",\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n  },\r\n  channelName: {\r\n    marginLeft: \"1.8rem\",\r\n    color: \"rgba(63, 63, 63, 1)\",\r\n  },\r\n  mySpace: {\r\n    marginTop: \"0.8rem\",\r\n  },\r\n  bot: {\r\n    height: \"3em\",\r\n    width: \"3em\",\r\n  },\r\n  user: {\r\n    height: \"1.7em\",\r\n    width: \"1.7em\",\r\n    backgroundColor: \"lightcoral\",\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    borderTop: \"1px solid rgba(50, 74, 95, 0.25)\",\r\n    padding: \"2rem 2rem\",\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n  },\r\n  welcomeContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  welcome: {\r\n    display: \"flex\",\r\n    marginTop: \"1em\",\r\n    marginLeft: \"1.8rem\",\r\n    paddingBottom: \"3em\",\r\n    paddingTop: \"50vh\",\r\n  },\r\n  welcomeText: {\r\n    fontSize: \"1.06rem\",\r\n    color: \"#3F3F3F\",\r\n    marginLeft: \"1.4em\",\r\n    marginRight: \"5em\",\r\n  },\r\n  messageAdornment: {\r\n    position: \"absolute\",\r\n    bottom: \"1.5rem\",\r\n    left: \"2.2em\",\r\n    width: \"max-content\",\r\n  },\r\n  messageIcons: {\r\n    color: \"rgba(43, 33, 24, 0.65)\",\r\n    cursor: \"pointer\",\r\n    height: \"1.3rem\",\r\n    width: \"1.3rem\",\r\n    marginLeft: \"0.8rem\",\r\n  },\r\n}));\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: \"#44b700\",\r\n    marginBottom: \"1rem\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: \"-1px\",\r\n      left: \"-1px\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"$ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst Channel = () => {\r\n  // declaring values for context\r\n  const {\r\n    apiData,\r\n    setApiData,\r\n    apiHeaders,\r\n    setApiHeaders,\r\n    authKey,\r\n    setAuthKey,\r\n    channelData,\r\n    setChannelData,\r\n    channelID,\r\n    setchannelID,\r\n    channelMembers,\r\n    setChannelMembers,\r\n    channelMessage,\r\n    setchannelMessage,\r\n    fetchFilterMembers,\r\n    tokenValue,\r\n    setTokenValue,\r\n    userName,\r\n    setUserName,\r\n  } = useContext(ContextAPI);\r\n\r\n  const classes = useStyles();\r\n  const inputValue = useRef();\r\n  const messageView = useRef();\r\n  const [messageInput, setMessageInput] = useState(\"\");\r\n  const [newMessage, setNewMessage] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [showPicker, setShowPicker] = useState(false);\r\n\r\n  //retrieving messages on a channel\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `http://206.189.91.54/api/v1/messages?receiver_id=${channelData.id}&receiver_class=Channel`,\r\n      headers: {\r\n        \"access-token\": authKey.accessToken,\r\n        client: authKey.accessClient,\r\n        expiry: authKey.accessExpiry,\r\n        uid: authKey.accessUID,\r\n      },\r\n      params: {\r\n        receiver_id: channelData.data?.data?.id,\r\n        receiver_class: \"Channel\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setchannelMessage(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [channelID, newMessage]);\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const handleInputValues = () => {\r\n    setMessageInput(inputValue.current.value);\r\n  };\r\n\r\n  const sendMessage = (e) => {\r\n    //push the input value to api\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"https://slackapi.avionschool.com/api/v1/messages\",\r\n      headers: {\r\n        \"access-token\": authKey.accessToken,\r\n        client: authKey.accessClient,\r\n        expiry: authKey.accessExpiry,\r\n        uid: authKey.accessUID,\r\n      },\r\n      data: {\r\n        receiver_id: channelData.id,\r\n        receiver_class: \"Channel\",\r\n        body: messageInput,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setNewMessage(!newMessage);\r\n        setMessageInput(\"\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setTimeout(() => {\r\n      messageView.current.scrollIntoView();\r\n    }, 400);\r\n  };\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    setMessageInput((prev) => prev + emojiObject.emoji);\r\n    setShowPicker(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`${classes.root} scroll-active`}>\r\n      <div className={classes.channelNameContainer}>\r\n        <Typography className={classes.channelName} variant=\"h5\">\r\n          {`# ${channelData.name}`}\r\n        </Typography>\r\n        <ChannelMember />\r\n      </div>\r\n      <div className={classes.contentDisplay}>\r\n        <div className={classes.mySpace}>\r\n          <Grid>\r\n            <Grid item xs={12}>\r\n              <div className={classes.welcome}>\r\n                <img src={TMiBot} alt=\"bot\" className={classes.bot} />\r\n                <div className={classes.welcomeContainer}>\r\n                  <Typography className={classes.welcomeText} variant=\"h6\">\r\n                    This is the very beginning of the{\" \"}\r\n                    <strong>channelname</strong> channel\r\n                  </Typography>\r\n                  <Typography className={classes.welcomeText} variant=\"h6\">\r\n                    This channel is for working on a project. Hold meetings,\r\n                    share docs, and make decisions together with your team.\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n              {channelMessage.map((val, key) => {\r\n                const timestamp = new Date(val.created_at);\r\n                return (\r\n                  <div key={key} className={classes.message}>\r\n                    <StyledBadge\r\n                      overlap=\"circular\"\r\n                      anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"right\",\r\n                      }}\r\n                      variant=\"dot\"\r\n                    >\r\n                      <Avatar\r\n                        alt={val.sender.uid}\r\n                        src=\"/broken-image.jpg\"\r\n                        className={classes.user}\r\n                      />\r\n                    </StyledBadge>\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <Typography\r\n                          style={{\r\n                            marginLeft: \"0.8em\",\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        >\r\n                          {val.sender.uid}\r\n                        </Typography>\r\n                        <Typography\r\n                          style={{\r\n                            marginLeft: \"1em\",\r\n                            color: \"rgba(50, 74, 95, 0.7)\",\r\n                          }}\r\n                          variant=\"subtitle2\"\r\n                        >\r\n                          {timestamp.toLocaleTimeString([], {\r\n                            hour: \"2-digit\",\r\n                            minute: \"2-digit\",\r\n                          })}\r\n                        </Typography>\r\n                      </div>\r\n                      <Typography\r\n                        style={{\r\n                          position: \"relative\",\r\n                          fontSize: \"1.06rem\",\r\n                          color: \"#3F3F3F\",\r\n                          marginLeft: \"0.8em\",\r\n                        }}\r\n                        variant=\"h6\"\r\n                      >\r\n                        {val.body}\r\n                      </Typography>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n          <div ref={messageView}></div>\r\n          <AutoScroll />\r\n        </div>\r\n      </div>\r\n\r\n      <input\r\n        placeholder=\"Message #Channel-name\"\r\n        className={classes.input}\r\n        ref={inputValue}\r\n        onChange={handleInputValues}\r\n        onKeyDown={handleKeyDown}\r\n        onClick={() => setShowPicker(false)}\r\n        value={messageInput}\r\n        type=\"text\"\r\n      />\r\n      <div className={classes.messageAdornment}>\r\n        <AlternateEmailIcon className={classes.messageIcons} />\r\n        <ImageOutlinedIcon className={classes.messageIcons} />\r\n        <AttachFileIcon className={classes.messageIcons} />\r\n        <SentimentSatisfiedOutlinedIcon\r\n          onClick={() => setShowPicker(!showPicker)}\r\n          className={classes.messageIcons}\r\n        />\r\n      </div>\r\n      <Button type=\"submit\" onClick={sendMessage} className={classes.button}>\r\n        <SendIcon className={classes.sendIcon} />\r\n      </Button>\r\n      {showPicker && (\r\n        <Picker\r\n          className={classes.emojiPicker}\r\n          pickerStyle={{\r\n            width: \"23%\",\r\n            position: \"absolute\",\r\n            bottom: \"7em\",\r\n            left: \"1.2rem\",\r\n          }}\r\n          onEmojiClick={onEmojiClick}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Channel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport TMiBot from '../../assets/images/TMiBot.svg'\r\n\r\nconst Motivate = ({ openMotivate, setOpenMotivate }) => {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    author: {\r\n      color: \"gray\",\r\n      paddingTop: \"2rem\",\r\n    },\r\n    bodyRoot: {\r\n      height: \"27vh\",\r\n      width: \"35vw\",\r\n      background: \"whitesmoke\",\r\n      borderRadius: \"7px\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      padding: \"0 1rem\",\r\n    },\r\n    botImg: {\r\n      height: '4.6em',\r\n      width: '4.6em',\r\n    },\r\n    copy: {\r\n      paddingTop: \"3rem\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const [quote, setQuote] = useState({});\r\n\r\n  const quotes = [\r\n    {\r\n      body: \"Don't watch the clock; do what it does. Keep going.\",\r\n      author: \"Sam Levenson\",\r\n    },\r\n    {\r\n      body: \"The first step toward success is taken when you refuse to be a captive of the environment in which you first find yourself.\",\r\n      author: \"Mark Caine\",\r\n    },\r\n    {\r\n      body: \"There is only one corner of the universe you can be certain of improving, and that's your own self.\",\r\n      author: \"Aldous Huxley\",\r\n    },\r\n    {\r\n      body: \"Perseverance is failing 19 times and succeeding the 20th.\",\r\n      author: \"Julie Andrews\",\r\n    },\r\n    {\r\n      body: \"I really believe that everyone has a talent, ability, or skill that he can mine to support himself and to succeed in life.\",\r\n      author: \"Dean Koontz\",\r\n    },\r\n    {\r\n      body: \"One way to keep momentum going is to have constantly greater goals.\",\r\n      author: \"Michael Korda\",\r\n    },\r\n    {\r\n      body: \"Whatever you want in life, other people are going to want it too. Believe in yourself enough to accept the idea that you have an equal right to it.\",\r\n      author: \"Diane Sawyer\",\r\n    },\r\n    {\r\n      body: \"The people who influence you are the people who believe in you.\",\r\n      author: \"Henry Drummond\",\r\n    },\r\n    {\r\n      body: \"It does not matter how slowly you go as long as you do not stop.\",\r\n      author: \"Confucius\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const random = quotes[Math.floor(Math.random() * quotes.length)];\r\n    setQuote(random);\r\n  }, [openMotivate]);\r\n\r\n  const handleMotivationClose = () => {\r\n    setOpenMotivate(false);\r\n  };\r\n\r\n  const body = (\r\n    <div className={classes.bodyRoot}>\r\n      <img className={classes.botImg} src={TMiBot} alt=\"TMiBot\" />\r\n      <h3 className={classes.copy}>{quote.body}</h3>\r\n      <h5 className={classes.author}>{quote.author}</h5>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        className={classes.root}\r\n        open={openMotivate}\r\n        onClose={handleMotivationClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{ timeout: 400 }}\r\n      >\r\n        <Fade in={openMotivate}>\r\n          <div>{body}</div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Motivate;\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ContextAPI } from \"../Context/ContextAPi\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport SentimentSatisfiedOutlinedIcon from \"@material-ui/icons/SentimentSatisfiedOutlined\";\r\nimport ImageOutlinedIcon from \"@material-ui/icons/ImageOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport TMiBot from \"../../assets/images/TMiBot.svg\";\r\nimport AutoScroll from \"./AutoScroll\";\r\nimport Motivate from \"../Motivate/Motivate\";\r\nimport Picker from \"emoji-picker-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"83vw\",\r\n      marginLeft: \"325px\",\r\n    },\r\n    background: \"#ECF0F1\",\r\n    position: \"fixed\",\r\n    left: \"0\",\r\n    top: \"64px\",\r\n    bottom: \"0\",\r\n    right: \"0\",\r\n  },\r\n  input: {\r\n    width: \"98%\",\r\n    height: \"10%\",\r\n    border: \"1px solid black\",\r\n    backgroundColor: \"#ECF0F1\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    marginLeft: \"1%\",\r\n    marginBottom: \"1rem\",\r\n    paddingLeft: \"2em\",\r\n    paddingBottom: \"2.5em\",\r\n    borderRadius: \"4px\",\r\n    fontSize: \"1rem\",\r\n    outline: \"none\",\r\n  },\r\n  sendIcon: {\r\n    marginRight: \"1rem\",\r\n    cursor: \"pointer\",\r\n    color: \"rgba(43, 33, 24, 0.65)\",\r\n  },\r\n  contentDisplay: {\r\n    height: \"77vh\",\r\n    width: \"calc(100% + 1px)\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  channelNameContainer: {\r\n    height: \"5vh\",\r\n    width: \"calc(100% + 1px)\",\r\n    marginTop: \"1rem\",\r\n    borderBottom: \"1px solid rgba(43, 33, 24, 0.25)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  channelName: {\r\n    marginLeft: \"1.8rem\",\r\n    color: \"rgba(63, 63, 63, 1)\",\r\n  },\r\n  emojiPicker: {\r\n    paddingBottom: \"4em\",\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n  },\r\n  mySpace: {\r\n    marginTop: \"0.8rem\",\r\n  },\r\n  bot: {\r\n    height: \"5em\",\r\n    width: \"5em\",\r\n  },\r\n  user: {\r\n    height: \"1.7em\",\r\n    width: \"1.7em\",\r\n    backgroundColor: \"lightcoral\",\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    borderTop: \"1px solid rgba(50, 74, 95, 0.25)\",\r\n    padding: \"2rem 2rem\",\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    bottom: \"4.7em\",\r\n  },\r\n  messageAdornment: {\r\n    position: \"absolute\",\r\n    bottom: \"1.5rem\",\r\n    left: \"2.2em\",\r\n    width: \"max-content\",\r\n  },\r\n  messageIcons: {\r\n    color: \"rgba(43, 33, 24, 0.65)\",\r\n    cursor: \"pointer\",\r\n    height: \"1.3rem\",\r\n    width: \"1.3rem\",\r\n    marginLeft: \"0.8rem\",\r\n  },\r\n}));\r\n\r\nconst HomeChannel = () => {\r\n  const classes = useStyles();\r\n  const inputValue = useRef();\r\n  const messageView = useRef();\r\n  const [messageInput, setMessageInput] = useState(\"\");\r\n  const [newMessage, setNewMessage] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [openMotivate, setOpenMotivate] = useState(false);\r\n  const [showPicker, setShowPicker] = useState(false);\r\n\r\n  const timeStamp = new Date();\r\n  const d = `${timeStamp.getHours()}:${timeStamp.getMinutes()}`;\r\n  const time = d.toString();\r\n\r\n  const {\r\n    allUsers,\r\n    setAllUsers,\r\n    apiData,\r\n    setApiData,\r\n    apiHeaders,\r\n    setApiHeaders,\r\n    auth,\r\n    setAuth,\r\n    authKey,\r\n    setAuthKey,\r\n    channelData,\r\n    setChannelData,\r\n    channelMembers,\r\n    setChannelMembers,\r\n    channelMessage,\r\n    setchannelMessage,\r\n    tokenValue,\r\n    setTokenValue,\r\n    userName,\r\n    setUserName,\r\n  } = useContext(ContextAPI);\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"messages\")) {\r\n      return;\r\n    } else {\r\n      setMessages(JSON.parse(localStorage.getItem(\"message\")));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    messageView.current.scrollIntoView();\r\n  }, []);\r\n\r\n  //function to handle the value passed in the Input\r\n  const handleInputValue = () => {\r\n    setMessageInput(inputValue.current.value);\r\n  };\r\n\r\n  //function on sending message\r\n  const sendMessage = (e) => {\r\n    if (messageInput === \"\") return;\r\n    if (messageInput === \"/motivate\") {\r\n      setTimeout(() => {\r\n        setOpenMotivate(true);\r\n      }, 1200);\r\n    }\r\n    messages.push(inputValue.current.value);\r\n    // setMessageStatus(!messageStatus)\r\n    localStorage.setItem(\"message\", JSON.stringify(messages));\r\n    setMessages([...messages]);\r\n    setNewMessage(!newMessage);\r\n    setMessageInput(\"\");\r\n    setTimeout(() => {\r\n      messageView.current.scrollIntoView();\r\n    }, 400);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    setMessageInput((prev) => prev + emojiObject.emoji);\r\n    setShowPicker(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`${classes.root} scroll-active`}>\r\n      <div className={classes.channelNameContainer}>\r\n        <Typography className={classes.channelName} variant=\"h5\">\r\n          # My Space\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.contentDisplay}>\r\n        <div className={classes.mySpace}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            style={{ fontWeight: \"bold\", marginLeft: \"1.8rem\" }}\r\n          >\r\n            Hi, TMi-bot here!\r\n          </Typography>\r\n\r\n          <Grid>\r\n            <Grid item xs={12}>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  marginTop: \"1em\",\r\n                  marginLeft: \"1.8rem\",\r\n                  paddingBottom: \"4em\",\r\n                }}\r\n              >\r\n                <img src={TMiBot} alt=\"bot\" className={classes.bot} />\r\n                <Typography\r\n                  style={{\r\n                    fontSize: \"1.06rem\",\r\n                    color: \"#3F3F3F\",\r\n                    marginLeft: \"1.4em\",\r\n                    marginRight: \"5em\",\r\n                  }}\r\n                  variant=\"h6\"\r\n                >\r\n                  You're here! Hello!\r\n                  <br /> <br />\r\n                  This is your personal space. You can write anything in here,\r\n                  like a template, draft, or any of your jibber jabbers.\r\n                  <br /> <br />\r\n                  You may explore the app so you can get a full grasp to help\r\n                  you with your work as a team or as an individual.\r\n                  <br /> <br />\r\n                  I, however, am not a human. Just a bot (a simple bot) that can\r\n                  give you your daily motivation - just type{\" \"}\r\n                  <strong>/motivate</strong> in the message bar and I will give\r\n                  you something to get you motivated.\r\n                </Typography>\r\n              </div>\r\n\r\n              {messages.map((val, key) => (\r\n                <div key={key} className={classes.message}>\r\n                  <Avatar\r\n                    alt={userName}\r\n                    src=\"/broken-image.jpg\"\r\n                    className={classes.user}\r\n                  />\r\n                  {/* <img src={TMiBot} alt=\"bot\" className={classes.user} /> */}\r\n                  <div style={{ display: \"flex\" }}>\r\n                    <Typography\r\n                      style={{\r\n                        marginLeft: \"0.8em\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      {userName}\r\n                    </Typography>\r\n                    <Typography\r\n                      style={{\r\n                        marginLeft: \"1em\",\r\n                        color: \"rgba(50, 74, 95, 0.7)\",\r\n                      }}\r\n                      variant=\"subtitle2\"\r\n                    >\r\n                      {time}\r\n                    </Typography>\r\n                  </div>\r\n                  <Typography\r\n                    style={{\r\n                      position: \"relative\",\r\n                      fontSize: \"1.06rem\",\r\n                      color: \"#3F3F3F\",\r\n                      marginLeft: \"-7.1em\",\r\n                      marginTop: \"1.5rem\",\r\n                      marginRight: \"5em\",\r\n                    }}\r\n                    variant=\"h6\"\r\n                  >\r\n                    {val}\r\n                  </Typography>\r\n                </div>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n          <div ref={messageView}></div>\r\n          <AutoScroll />\r\n          {openMotivate ? (\r\n            <Motivate\r\n              openMotivate={openMotivate}\r\n              setOpenMotivate={setOpenMotivate}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <input\r\n        placeholder=\"Message #Channel-name\"\r\n        className={classes.input}\r\n        ref={inputValue}\r\n        onChange={handleInputValue}\r\n        onClick={() => setShowPicker(false)}\r\n        onKeyDown={handleKeyDown}\r\n        value={messageInput}\r\n        type=\"text\"\r\n      />\r\n      <div className={classes.messageAdornment}>\r\n        <AlternateEmailIcon className={classes.messageIcons} />\r\n        <ImageOutlinedIcon className={classes.messageIcons} />\r\n        <AttachFileIcon className={classes.messageIcons} />\r\n        <SentimentSatisfiedOutlinedIcon\r\n          onClick={() => setShowPicker(!showPicker)}\r\n          className={classes.messageIcons}\r\n        />\r\n      </div>\r\n      <Button type=\"submit\" onClick={sendMessage} className={classes.button}>\r\n        <SendIcon className={classes.sendIcon} />\r\n      </Button>\r\n      {showPicker && (\r\n        <Picker\r\n          className={classes.emojiPicker}\r\n          pickerStyle={{\r\n            width: \"23%\",\r\n            position: \"absolute\",\r\n            bottom: \"7em\",\r\n            left: \"1.2rem\",\r\n          }}\r\n          onEmojiClick={onEmojiClick}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeChannel;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://206.189.91.54/api/v1/';\r\n\r\nexport const callAPI = (data) => {\r\n    \r\n    return axios({\r\n        method: 'push',\r\n        url: data.url,\r\n        data: {\r\n            'email': data.email,\r\n            'password': data.password,\r\n            'password_confirmation': data.password_confirmation,\r\n        },\r\n        headers: {\r\n            'access-token': data['access-token'],\r\n            uid: data.uid,\r\n            expiry: data.expiry,\r\n            client: data.client,\r\n        },\r\n    })\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/CatBG.1435b4c2.jpg\";","export default __webpack_public_path__ + \"static/media/sample.32430a93.jpg\";","export default __webpack_public_path__ + \"static/media/Logo.7f82d04e.svg\";","import { useRef, useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { callAPI } from \"../API/callAPI.js\";\r\nimport { Breakpoint } from \"@material-ui/core/styles/createBreakpoints\";\r\nimport { ContextAPI } from \"../Context/ContextAPi.js\";\r\nimport {\r\n  Button,\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Sample from \"../../assets/images/sample.jpg\";\r\nimport CatBG from \"../../assets/images/CatBG.jpg\";\r\nimport Logo from \"../../assets/images/Logo.svg\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  containerBackground: {\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"#F2ebdd\",\r\n    height: \"100vh\",\r\n  },\r\n\r\n  containerDiv: {\r\n    direction: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100vh\",\r\n  },\r\n\r\n  errorMessage: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  sideImageContainer: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n  },\r\n\r\n  sideImage: {\r\n    height: \"100vh\",\r\n    width: \"60vw\",\r\n  },\r\n\r\n  headerLogin: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: \"3.5em\",\r\n    fontWeight: \"bolder\",\r\n    textAlign: \"left\",\r\n    margin: \"15px\",\r\n  },\r\n\r\n  input: {\r\n    width: \"70%\",\r\n    margin: \"10px\",\r\n  },\r\n\r\n  buttonLogin: {\r\n    margin: \"10px\",\r\n    fontSize: \"1.2em\",\r\n  },\r\n\r\n  footerContainer: {\r\n    margin: \"10px\",\r\n    direction: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  footerOne: {\r\n    marginTop: \"10px\",\r\n    marginRight: \"10px\",\r\n    fontSize: \"1em\",\r\n  },\r\n\r\n  footerTwo: {\r\n    marginTop: \"10px\",\r\n    fontSize: \"1em\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const emailInput = useRef();\r\n  const passInput = useRef();\r\n  const {\r\n    apiData,\r\n    setApiData,\r\n    apiHeaders,\r\n    setApiHeaders,\r\n    auth,\r\n    setAuth,\r\n    channelData,\r\n    setChannelData,\r\n    channelMembers,\r\n    setChannelMembers,\r\n    channelMessage,\r\n    setchannelMessage,\r\n    setMessages,\r\n    tokenValue,\r\n    setTokenValue,\r\n    userName,\r\n    setUserName,\r\n  } = useContext(ContextAPI);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(false);\r\n\r\n  const handleKeyDown = (evt) => {\r\n    evt.key === \"Enter\" && handleLogin(evt);\r\n  };\r\n\r\n  const toRegister = () => {\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  const handleErrorDisplay = () => {\r\n    setErrorMsg(true);\r\n    setTimeout(() => {\r\n      setErrorMsg(false);\r\n    }, 4000);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"https://slackapi.avionschool.com/api/v1/auth/sign_in\",\r\n      data: {\r\n        email: email,\r\n        password: password,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        const { \"access-token\": token } = res.headers;\r\n        const { email } = res.data.data;\r\n        const { uid } = res.data.data;\r\n        const userDisplayName = email.split(\"@\")[0];\r\n\r\n        setUserName(userDisplayName);\r\n        if (res.data.errors) {\r\n          handleErrorDisplay();\r\n        }\r\n        const authData = {\r\n          accessToken: token,\r\n          accessClient: res.headers.client,\r\n          accessExpiry: res.headers.expiry,\r\n          accessUID: uid,\r\n        };\r\n        localStorage.setItem(\"userKey\", JSON.stringify(authData));\r\n        setAuth(true);\r\n        history.push(\"/dashboard\");\r\n      })\r\n      .then((res) => {\r\n        const auth = JSON.parse(localStorage.getItem(\"userKey\"));\r\n      })\r\n      .catch((err) => {\r\n        handleErrorDisplay();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.containerBackground}>\r\n      <Grid container className={classes.containerDiv}>\r\n        <Grid item xs={12} sm={8} md={5} className={classes.containerLoginForm}>\r\n          <Box\r\n            sx={{\r\n              my: 8,\r\n              mx: 5,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {errorMsg ? (\r\n              <Snackbar\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n                open=\"true\"\r\n              >\r\n                <Alert severity=\"error\" variant=\"filled\">\r\n                  Invalid credentials. Try again.\r\n                </Alert>\r\n              </Snackbar>\r\n            ) : null}\r\n            <Typography className={classes.headerLogin}>Sign In</Typography>\r\n\r\n            <TextField\r\n              margin=\"normal\"\r\n              size=\"small\"\r\n              required\r\n              variant=\"outlined\"\r\n              id=\"email-login\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              ref={emailInput}\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className={classes.input}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              size=\"small\"\r\n              required\r\n              variant=\"outlined\"\r\n              id=\"password-login\"\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              ref={passInput}\r\n              value={password}\r\n              onKeyDown={handleKeyDown}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className={classes.input}\r\n            />\r\n\r\n            <FormControlLabel\r\n              control={<Checkbox />}\r\n              label=\"Keep me logged in\"\r\n              className={classes.remember}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              className={classes.buttonLogin}\r\n              onClick={(e) => handleLogin(e)}\r\n            >\r\n              {\" \"}\r\n              LOGIN{\" \"}\r\n            </Button>\r\n\r\n            <Grid container className={classes.footerContainer}>\r\n              <Typography className={classes.footerOne}>\r\n                {\" \"}\r\n                Don't have an account?{\" \"}\r\n              </Typography>\r\n              <Typography onClick={toRegister} className={classes.footerTwo}>\r\n                {\" \"}\r\n                Sign up\r\n              </Typography>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={4}\r\n          md={7}\r\n          sx={{}}\r\n          className={classes.sideImageContainer}\r\n        >\r\n          <img src={CatBG} alt=\"sample\" className={classes.sideImage} />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { ContextAPI } from \"../Context/ContextAPi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"55vh\",\r\n    width: \"60vh\",\r\n    background: \"#ECF0F1\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    borderRadius: \"9px\",\r\n  },\r\n  header: {\r\n    color: \"#3F3F3F\",\r\n  },\r\n  bodyCopy: {\r\n    paddingTop: \"1.9rem\",\r\n    color: \"#6A6565\",\r\n  },\r\n  label: {\r\n    paddingTop: \"1.2rem\",\r\n    color: \"#3F3F3F\",\r\n    fontWeight: \"700\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    border: \"1px solid #3D3F41\",\r\n    borderRadius: \"3px\",\r\n    paddingLeft: \"2rem\",\r\n    marginTop: \"0.5rem\",\r\n    height: \"2.8em\",\r\n  },\r\n  lockIcon: {\r\n    position: \"absolute\",\r\n    marginTop: \"0.95em\",\r\n    marginLeft: \"0.5rem\",\r\n    width: \"0.7em\",\r\n    height: \"0.7em\",\r\n  },\r\n  switch: {\r\n    position: \"absolute\",\r\n    right: \"2em\",\r\n    marginBottom: \"6em\",\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    bottom: \"2rem\",\r\n    right: \"3em\",\r\n    height: \"2.5em\",\r\n    width: \"6.2em\",\r\n    border: \"none\",\r\n    borderRadius: \"4px\",\r\n    background: \"#3E4F68\",\r\n    fontSize: \"1rem\",\r\n    fontWeight: \"600\",\r\n    color: \"#ECF0F1\",\r\n    letterSpacing: \"0.08rem\",\r\n    cursor: \"pointer\",\r\n  },\r\n  infoIcon: {\r\n    position: \"absolute\",\r\n    bottom: \"2.4rem\",\r\n    color: \"#787878\",\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: \"1.6em\",\r\n    top: \"2.2rem\",\r\n    color: \"#787878\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\nconst AddChannelModal = ({ setModalOpen, closeModal }) => {\r\n  const {\r\n    apiData,\r\n    setApiData,\r\n    apiHeaders,\r\n    setApiHeaders,\r\n    tokenValue,\r\n    setTokenValue,\r\n    channelData,\r\n    setChannelData,\r\n  } = useContext(ContextAPI); //fetch api responses => data.token, etc.\r\n  const classes = useStyles();\r\n\r\n  const channelName = useRef();\r\n  const channelDescription = useRef();\r\n\r\n  const [modalClose, setModalClose] = useState(true);\r\n  const [nameInputValue, setNameInputValue] = useState(\"\");\r\n  const [descriptionValue, setDescriptionValue] = useState(\"\");\r\n  const [switchState, setSwitchState] = useState(\"\");\r\n  const [headerPrivate, setheaderPrivate] = useState(false);\r\n  const [privateDetails, setPrivateDetails] = useState(false);\r\n  const [lockIcon, setLockIcon] = useState(false);\r\n\r\n  //function to handle closing of Add Channel modal\r\n  const handleClose = () => {\r\n    setModalClose(!modalClose);\r\n    closeModal(false);\r\n    setNameInputValue(\"\");\r\n    setDescriptionValue(\"\");\r\n    setSwitchState(false);\r\n  };\r\n\r\n  const handleSwitchChange = (event) => {\r\n    setSwitchState(event.target.checked);\r\n    setheaderPrivate(!headerPrivate);\r\n    setPrivateDetails(!privateDetails);\r\n    setLockIcon(!lockIcon);\r\n  };\r\n\r\n  //functions to access value of input on change and set to empty once modal closes\r\n  const handleNameInputValue = () => {\r\n    setNameInputValue(channelName.current.value);\r\n  };\r\n\r\n  const handleDescriptionValue = () => {\r\n    setNameInputValue(channelDescription.current.value);\r\n  };\r\n\r\n  //Function to post request in creating new Channel\r\n  const createChannel = (e) => {\r\n    e.preventDefault();\r\n    handleClose();\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"https://slackapi.avionschool.com/api/v1/channels\",\r\n      headers: {\r\n        \"access-token\": tokenValue,\r\n        client: apiHeaders.client,\r\n        expiry: apiHeaders.expiry,\r\n        uid: apiData.data?.data?.uid,\r\n      },\r\n      data: {\r\n        name: nameInputValue,\r\n        user_ids: [],\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setChannelData(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //creating component for the modal\r\n  const body = (\r\n    <div className={classes.root}>\r\n      <CloseIcon className={classes.closeButton} onClick={handleClose} />\r\n      <div style={{ margin: \"1.6em 2.9em\" }}>\r\n        <h1 className={classes.header}>\r\n          Create a {headerPrivate ? \"private \" : null}channel\r\n        </h1>\r\n        <Typography className={classes.bodyCopy} variant=\"body1\">\r\n          Channels are where your team communicates. They’re best when organized\r\n          around a topic — #coding, for example.\r\n        </Typography>\r\n        <form>\r\n          <Typography className={classes.label}>Name</Typography>\r\n          {lockIcon ? <LockIcon className={classes.lockIcon} /> : null}\r\n          <input\r\n            className={classes.input}\r\n            ref={channelName}\r\n            value={nameInputValue}\r\n            onChange={handleNameInputValue}\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            placeholder=\"e.g coding-session\"\r\n            required\r\n          />\r\n          <Typography className={classes.label}>Description</Typography>\r\n          <Typography\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"6.7em\",\r\n              marginTop: \"-1.4rem\",\r\n              color: \"#8F9093\",\r\n            }}\r\n            variant=\"subtitle2\"\r\n          >\r\n            (optional)\r\n          </Typography>\r\n          <InputBase\r\n            className={classes.input}\r\n            ref={channelDescription}\r\n            onChange={handleDescriptionValue}\r\n            value={descriptionValue}\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            required\r\n          />\r\n          <Typography style={{ color: \"#8F9093\" }} variant=\"subtitle2\">\r\n            What's this channel about?\r\n          </Typography>\r\n          <Typography className={classes.label}>Make private</Typography>\r\n          <Typography\r\n            style={{\r\n              color: \"#6A6565\",\r\n              width: \"75%\",\r\n            }}\r\n            variant=\"body1\"\r\n          >\r\n            {privateDetails\r\n              ? \"When a channel is set to private, it can only be viewed or joined by invitation.\"\r\n              : \"This can’t be undone. A private channel cannot be made public later on.\"}\r\n          </Typography>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={switchState}\r\n                onChange={handleSwitchChange}\r\n                name=\"checkPrivate\"\r\n                color=\"primary\"\r\n                className={classes.switch}\r\n              />\r\n            }\r\n          />\r\n        </form>\r\n        <button className={classes.button} onClick={createChannel}>\r\n          Create\r\n        </button>\r\n        <InfoOutlinedIcon className={classes.infoIcon} />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Modal open=\"true\" open={setModalOpen} onClose={handleClose}>\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddChannelModal;\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ContextAPI } from \"../Context/ContextAPi\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"53vw\",\r\n    },\r\n    maxHeight: \"20vh\",\r\n    width: \"43vw\",\r\n    background: \"#ECF0F1\",\r\n    position: \"absolute\",\r\n    zIndex: \"10\",\r\n    width: \"56.6%\",\r\n    borderBottomLeftRadius: \"12px\",\r\n    borderBottomRightRadius: \"12px\",\r\n    border: \"1px solid rgba(120, 120, 120, 0.7)\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  searchResults: {\r\n    marginLeft: \"3em\",\r\n    marginTop: \"1em\",\r\n    color: \"#2B2118\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst UserSearch = ({\r\n  openUserModal,\r\n  setOpenUserModal,\r\n  searchBar,\r\n  setSearchBar,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    allUsers,\r\n    setAllUsers,\r\n    setAllUsersInfo,\r\n    apiData,\r\n    setApiData,\r\n    apiHeaders,\r\n    setApiHeaders,\r\n    channelData,\r\n    setChannelData,\r\n    channelMembers,\r\n    setChannelMembers,\r\n    channelMessage,\r\n    setchannelMessage,\r\n    tokenValue,\r\n    setTokenValue,\r\n    userName,\r\n    setUserName,\r\n  } = useContext(ContextAPI);\r\n\r\n  //declaring all users fetched from API\r\n  const userSearch = [...JSON.stringify(allUsers)];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {allUsers\r\n        .filter((val) => {\r\n          if (searchBar === \"\") {\r\n            return val;\r\n          } else if (JSON.stringify(val.uid).includes(searchBar)) {\r\n            return val;\r\n          }\r\n          return false;\r\n        })\r\n        .map((val) => [\r\n          <div\r\n            className={classes.searchResults}\r\n            onClick={() => {\r\n              setAllUsersInfo(val);\r\n              setOpenUserModal(true);\r\n              setSearchBar(\"\");\r\n              console.log(val);\r\n            }}\r\n          >\r\n            {val.uid}\r\n          </div>,\r\n        ])}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSearch;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { ContextAPI } from \"../Context/ContextAPi\";\r\nimport { Chip, makeStyles, Modal, Typography } from \"@material-ui/core\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"max-content\",\r\n    width: \"23vw\",\r\n    background: \"#ECF0F1\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    borderRadius: \"10px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"start\",\r\n    padding: \"2rem\",\r\n    outline: \"none\",\r\n  },\r\n  accountIcon: {\r\n    height: \"5.5em\",\r\n    width: \"5.5em\",\r\n    color: \"#1A335A\",\r\n    position: \"absolute\",\r\n    right: \"1.2em\",\r\n    top: \"3rem\",\r\n  },\r\n  body: {\r\n    paddingTop: \"2rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"start\",\r\n  },\r\n  chip: {\r\n    display: \"flex\",\r\n    justifyContent: \"start\",\r\n    flexWrap: \"wrap\",\r\n    padding: \"1rem\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  header: {\r\n    fontWeight: \"bolder\",\r\n    color: \"#787878\",\r\n  },\r\n}));\r\n\r\nconst MyAccount = ({ profileModalOpen, setProfileModalOpen }) => {\r\n  const {\r\n    allChannels,\r\n    setAllChannels,\r\n    allUsers,\r\n    setAllUsers,\r\n    apiData,\r\n    setApiData,\r\n    apiHeaders,\r\n    setApiHeaders,\r\n    auth,\r\n    setAuth,\r\n    authKey,\r\n    setAuthKey,\r\n    channelData,\r\n    setChannelData,\r\n    channelID,\r\n    setchannelID,\r\n    channelMembers,\r\n    setChannelMembers,\r\n    channelMessage,\r\n    setchannelMessage,\r\n    fetchFilterMembers,\r\n    setFetchFilterMembers,\r\n    tokenValue,\r\n    setTokenValue,\r\n    userName,\r\n    setUserName,\r\n  } = useContext(ContextAPI);\r\n\r\n  const classes = useStyles();\r\n\r\n  const time = new Date().toLocaleTimeString(\"en-US\", {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  });\r\n\r\n  const handleMyAccount = () => {\r\n    setProfileModalOpen(channelData);\r\n  };\r\n\r\n  const body = (\r\n    <div className={classes.root}>\r\n      <AccountCircleIcon className={classes.accountIcon} />\r\n      <div className={classes.body}>\r\n        <Typography className={classes.header} variant=\"body1\">\r\n          Display Name\r\n        </Typography>\r\n        <Typography variant=\"body1\">{userName}</Typography>\r\n      </div>\r\n      <div className={classes.body}>\r\n        <Typography className={classes.header} variant=\"body1\">\r\n          Local Time\r\n        </Typography>\r\n        <Typography variant=\"body1\">{time}</Typography>\r\n      </div>\r\n      <div className={classes.body}>\r\n        <Typography className={classes.header} variant=\"body1\">\r\n          Email Address\r\n        </Typography>\r\n        <Typography variant=\"body1\">{authKey.accessUID}</Typography>\r\n      </div>\r\n      <div className={classes.body}>\r\n        <Typography className={classes.header} variant=\"body1\">\r\n          Channels\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.chip}>\r\n        {allChannels.map((val, key) => {\r\n          return <Chip size=\"small\" label={val.name} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Modal open={profileModalOpen} onClose={handleMyAccount}>\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyAccount;\r\n","import React, { useState, useRef, useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ContextAPI } from \"../Context/ContextAPi\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport SentimentSatisfiedOutlinedIcon from \"@material-ui/icons/SentimentSatisfiedOutlined\";\r\nimport ImageOutlinedIcon from \"@material-ui/icons/ImageOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from \"axios\";\r\nimport Picker from \"emoji-picker-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"83vw\",\r\n      marginLeft: \"325px\",\r\n    },\r\n    position: \"fixed\",\r\n    background: \"#ECF0F1\",\r\n    left: \"0\",\r\n    top: \"64px\",\r\n    bottom: \"0\",\r\n    right: \"0\",\r\n  },\r\n  input: {\r\n    width: \"98%\",\r\n    height: \"10%\",\r\n    border: \"1px solid black\",\r\n    backgroundColor: \"#ECF0F1\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    marginLeft: \"1%\",\r\n    marginBottom: \"1rem\",\r\n    paddingLeft: \"2em\",\r\n    paddingBottom: \"2.5em\",\r\n    borderRadius: \"4px\",\r\n    fontSize: \"1rem\",\r\n    outline: \"none\",\r\n  },\r\n  sendIcon: {\r\n    marginRight: \"1rem\",\r\n    cursor: \"pointer\",\r\n    color: \"rgba(43, 33, 24, 0.65)\",\r\n  },\r\n  contentDisplay: {\r\n    height: \"77vh\",\r\n    width: \"calc(100% + 1px)\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  userNameContainer: {\r\n    height: \"5vh\",\r\n    width: \"calc(100% + 1px)\",\r\n    marginTop: \"1rem\",\r\n    borderBottom: \"1px solid rgba(43, 33, 24, 0.25)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  userName: {\r\n    marginLeft: \"1.8rem\",\r\n    color: \"rgba(63, 63, 63, 1)\",\r\n  },\r\n  mySpace: {\r\n    marginTop: \"0.8rem\",\r\n  },\r\n  bot: {\r\n    height: \"3em\",\r\n    width: \"3em\",\r\n  },\r\n  user: {\r\n    height: \"1.7em\",\r\n    width: \"1.7em\",\r\n    backgroundColor: \"lightcoral\",\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    borderTop: \"1px solid rgba(50, 74, 95, 0.25)\",\r\n    padding: \"2rem 2rem\",\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n  },\r\n  emojiPicker: {\r\n    paddingBottom: \"4em\",\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n  },\r\n  welcomeContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  welcome: {\r\n    display: \"flex\",\r\n    marginTop: \"1em\",\r\n    marginLeft: \"1.8rem\",\r\n    paddingBottom: \"3em\",\r\n    paddingTop: \"50vh\",\r\n  },\r\n  welcomeText: {\r\n    fontSize: \"1.06rem\",\r\n    color: \"#3F3F3F\",\r\n    marginLeft: \"1.4em\",\r\n    marginRight: \"5em\",\r\n  },\r\n  messageAdornment: {\r\n    position: \"absolute\",\r\n    bottom: \"1.5rem\",\r\n    left: \"2.2em\",\r\n    width: \"max-content\",\r\n  },\r\n  messageIcons: {\r\n    color: \"rgba(43, 33, 24, 0.65)\",\r\n    cursor: \"pointer\",\r\n    height: \"1.3rem\",\r\n    width: \"1.3rem\",\r\n    marginLeft: \"0.8rem\",\r\n  },\r\n}));\r\n\r\nconst Message = () => {\r\n  const classes = useStyles();\r\n  const {\r\n    allChannels,\r\n    setAllChannels,\r\n    allUsers,\r\n    setAllUsers,\r\n    apiData,\r\n    setApiData,\r\n    apiHeaders,\r\n    setApiHeaders,\r\n    auth,\r\n    setAuth,\r\n    authKey,\r\n    setAuthKey,\r\n    channelData,\r\n    setChannelData,\r\n    channelID,\r\n    setchannelID,\r\n    channelMembers,\r\n    setChannelMembers,\r\n    channelMessage,\r\n    setchannelMessage,\r\n    fetchFilterMembers,\r\n    setFetchFilterMembers,\r\n    setMessages,\r\n    tokenValue,\r\n    setTokenValue,\r\n    userMessages, //CONTAINS THE MESSAGES FROM A USER\r\n    setUserMessages,\r\n    userName /* Integrate to localstorage to avoid losing userdata on refresh */,\r\n    setUserName,\r\n    receiverID,\r\n    setReceiverID,\r\n    receiverUN,\r\n    setReceiverUN,\r\n  } = useContext(ContextAPI);\r\n\r\n  const [usersList, setUsersList] = useState([]);\r\n  const [inputMsg, setInputMsg] = useState(\"\");\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [userStorage, setUserStorage] = useState();\r\n  const msgRef = useRef();\r\n  const scrollRef = useRef();\r\n\r\n  const sendMsg = (e) => {\r\n    axios({\r\n      method: \"Post\",\r\n      url: \"http://206.189.91.54/api/v1/messages\",\r\n      headers: {\r\n        \"access-token\": authKey.accessToken,\r\n        client: authKey.accessClient,\r\n        expiry: authKey.accessExpiry,\r\n        uid: authKey.accessUID,\r\n      },\r\n      params: {\r\n        receiver_id: receiverID,\r\n        receiver_class: \"User\",\r\n        body: inputMsg,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        refresh();\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setInputMsg(\"\");\r\n\r\n    setTimeout(() => {\r\n      scrollRef.current.scrollIntoView();\r\n    }, 400);\r\n  };\r\n\r\n  const refresh = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `https://slackapi.avionschool.com/api/v1/messages?receiver_id=${receiverID}&receiver_class=User`,\r\n      headers: {\r\n        \"access-token\": authKey.accessToken,\r\n        client: authKey.accessClient,\r\n        expiry: authKey.accessExpiry,\r\n        uid: authKey.accessUID,\r\n      },\r\n      params: {\r\n        receiver_id: receiverID,\r\n        receiver_class: \"User\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setUserMessages(res.data?.data);\r\n      })\r\n      .catch((err) => console.log(err.response));\r\n  };\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    setInputMsg((prev) => prev + emojiObject.emoji);\r\n    setShowPicker(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`${classes.root} scroll-active`}>\r\n      <div className={classes.userNameContainer}>\r\n        <Typography className={classes.userName} variant=\"h5\">\r\n          {receiverUN}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.contentDisplay}>\r\n        <div className={classes.mySpace}>\r\n          <Grid>\r\n            <Grid item xs={12}>\r\n              <div className={classes.welcome}>\r\n                <div className={classes.welcomeContainer}>\r\n                  <Typography className={classes.welcomeText} variant=\"h6\">\r\n                    This is the very beginning of your chat with{\" \"}\r\n                    <strong>{receiverUN}</strong>\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n              {userMessages.map((val, key) => {\r\n                const timestamp = new Date(val.created_at);\r\n                return (\r\n                  <div className={classes.message}>\r\n                    <Avatar\r\n                      alt=\"Miyu Togo\"\r\n                      src=\"/broken-image.jpg\"\r\n                      className={classes.user}\r\n                    />\r\n                    <div style={{ display: \"flex\" }}>\r\n                      <Typography\r\n                        style={{\r\n                          marginLeft: \"0.8em\",\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        {val.sender.uid}\r\n                      </Typography>\r\n                      <Typography\r\n                        style={{\r\n                          marginLeft: \"1em\",\r\n                          color: \"rgba(50, 74, 95, 0.7)\",\r\n                        }}\r\n                        variant=\"subtitle2\"\r\n                      >\r\n                        {timestamp.toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                        })}\r\n                      </Typography>\r\n                    </div>\r\n                    <Typography\r\n                      style={{\r\n                        position: \"relative\",\r\n                        fontSize: \"1.06rem\",\r\n                        color: \"#3F3F3F\",\r\n                        marginLeft: \"-14.2em\",\r\n                        marginTop: \"1.5rem\",\r\n                        marginRight: \"5em\",\r\n                      }}\r\n                      variant=\"h6\"\r\n                    >\r\n                      {val.body}\r\n                    </Typography>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div ref={scrollRef}></div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <input\r\n        placeholder=\"Message here\"\r\n        className={classes.input}\r\n        type=\"text\"\r\n        onChange={(e) => setInputMsg(e.target.value)}\r\n        onClick={() => setShowPicker(false)}\r\n        value={inputMsg}\r\n      />\r\n      <div className={classes.messageAdornment}>\r\n        <AlternateEmailIcon className={classes.messageIcons} />\r\n        <ImageOutlinedIcon className={classes.messageIcons} />\r\n        <AttachFileIcon className={classes.messageIcons} />\r\n        <SentimentSatisfiedOutlinedIcon\r\n          onClick={() => setShowPicker(!showPicker)}\r\n          className={classes.messageIcons}\r\n        />\r\n      </div>\r\n      <Button\r\n        type=\"submit\"\r\n        className={classes.button}\r\n        onClick={(e) => sendMsg(e)}\r\n      >\r\n        <SendIcon className={classes.sendIcon} />\r\n      </Button>\r\n      {showPicker && (\r\n        <Picker\r\n          className={classes.emojiPicker}\r\n          pickerStyle={{\r\n            width: \"23%\",\r\n            position: \"absolute\",\r\n            bottom: \"7em\",\r\n            left: \"1.2rem\",\r\n          }}\r\n          onEmojiClick={onEmojiClick}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Message from \"../UserMessage/Message\";\r\nimport { ContextAPI } from \"../Context/ContextAPi\";\r\nimport { Button, makeStyles, Modal, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: \"#ECF0F1\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    borderRadius: \"10px\",\r\n    height: \"22vh\",\r\n    width: \"25vw\",\r\n  },\r\n  button: {\r\n    border: \"1px solid rgba(43, 41, 40, 0.2)\",\r\n  },\r\n  buttonContainer: {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    width: \"50%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    padding: \"1rem 4em\",\r\n  },\r\n  head: {\r\n    textAlign: \"center\",\r\n    paddingTop: \"1rem\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    marginTop: \"1.5rem\",\r\n    height: \"3em\",\r\n    border: \"1px solid rgba(43, 41, 40, 0.6)\",\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    paddingLeft: \"1.5em\",\r\n    fontSize: \"1.1rem\",\r\n  },\r\n});\r\n\r\nconst DirectMessage = ({ sendMessageModalOpen, setSendMessageModalOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    allChannels,\r\n    setAllChannels,\r\n    allUsers,\r\n    setAllUsers,\r\n    apiData,\r\n    setApiData,\r\n    apiHeaders,\r\n    setApiHeaders,\r\n    auth,\r\n    setAuth,\r\n    authKey,\r\n    setAuthKey,\r\n    channelData,\r\n    setChannelData,\r\n    channelID,\r\n    setchannelID,\r\n    channelMembers,\r\n    setChannelMembers,\r\n    channelMessage,\r\n    setchannelMessage,\r\n    fetchFilterMembers,\r\n    setFetchFilterMembers,\r\n    setMessages,\r\n    tokenValue,\r\n    setTokenValue,\r\n    userMessages,\r\n    setUserMessages,\r\n    receiverID,\r\n    setReceiverID,\r\n    receiverUN,\r\n    setReceiverUN,\r\n    messageDisplay,\r\n    setMessageDisplay,\r\n    userName /* Integrate to localstorage to avoid losing userdata on refresh */,\r\n    setUserName,\r\n  } = useContext(ContextAPI);\r\n\r\n  const inputVal = useRef();\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  //function to handle close for modal\r\n  const handleClose = () => {\r\n    setSendMessageModalOpen(false);\r\n  };\r\n\r\n  /* const handleInputValue = () => {\r\n    setInputValue(inputVal.current.value);\r\n  };\r\n */\r\n  const handleGetReceiverID = () => {\r\n    setInputValue(inputVal.current.value);\r\n    for (let i = 0; i < allUsers.length; i++) {\r\n      if (allUsers[i].email === inputVal.current.value) {\r\n        setReceiverID(allUsers[i].id);\r\n        setReceiverUN(allUsers[i].email);\r\n      } else if (allUsers[i].id === inputVal.current.value) {\r\n        setReceiverID(allUsers[i].id);\r\n        setReceiverUN(allUsers[i].email);\r\n      }\r\n    }\r\n  };\r\n\r\n  //function to retrieve message with a user\r\n  const retrieveMessage = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `https://slackapi.avionschool.com/api/v1/messages?receiver_id=${receiverID}&receiver_class=User`,\r\n      headers: {\r\n        \"access-token\": authKey.accessToken,\r\n        client: authKey.accessClient,\r\n        expiry: authKey.accessExpiry,\r\n        uid: authKey.accessUID,\r\n      },\r\n      params: {\r\n        receiver_id: receiverID,\r\n        receiver_class: \"User\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setUserMessages(res.data?.data);\r\n      })\r\n      .catch((err) => console.log(err.response));\r\n    setMessageDisplay(true);\r\n    handleClose();\r\n  };\r\n\r\n  const sendMessageModal = (\r\n    <div className={classes.root}>\r\n      <div className={classes.container}>\r\n        <Typography className={classes.head} variant=\"h5\">\r\n          Send a direct message\r\n        </Typography>\r\n        <input\r\n          onChange={handleGetReceiverID}\r\n          value={inputValue}\r\n          ref={inputVal}\r\n          className={classes.input}\r\n          placeholder=\"Enter email address\"\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div className={classes.buttonContainer}>\r\n        <Button onClick={retrieveMessage} className={classes.button}>\r\n          Message\r\n        </Button>\r\n        <Button onClick={handleClose} className={classes.button}>\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Modal open={sendMessageModalOpen} onClose={handleClose}>\r\n        {sendMessageModal}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectMessage;\r\n","import React, { useContext, useState } from \"react\"\r\nimport { ContextAPI } from \"../Context/ContextAPi\";\r\nimport { makeStyles, Modal, Typography } from \"@material-ui/core\"\r\nimport FaceIcon from '@material-ui/icons/Face';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: \"#ECF0F1\",\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        borderRadius: \"10px\",\r\n        height: \"35vh\",\r\n        width: \"18vw\",\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    button: {\r\n        background: 'none',\r\n        padding: '0.8rem 0.2rem',\r\n        outline: 'none',\r\n        border: '1px solid rgba(43, 41, 40, 0.5)',\r\n        borderRadius: '5px',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        width: '32%',\r\n        cursor: 'pointer'\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        width: '100%',\r\n        paddingTop: '2rem'\r\n    },\r\n    container: {\r\n        paddingTop: '2em'\r\n    },\r\n    faceIcon: {\r\n        height: '4em',\r\n        width: '4em',\r\n        color: 'rgba(43, 41, 40, 0.5)',\r\n        marginTop: '2rem'\r\n    },\r\n    header: {\r\n        fontWeight: \"bolder\",\r\n        color: \"#787878\",\r\n        fontSize: '1.1rem'\r\n    },\r\n    info: {\r\n        paddingLeft: '1rem'\r\n    },\r\n    userInfo: {\r\n        display: \"flex\",\r\n        color: '#2B2118'\r\n    },\r\n})\r\n\r\nconst AllUserSearch = ({ openUserModal, setOpenUserModal }) => {\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        allUsersInfo\r\n      } = useContext(ContextAPI);\r\n\r\n    const userInfoName = allUsersInfo.uid.split('@')[0]\r\n\r\n    //close the modal\r\n    const handleUserModal = () => {\r\n        setOpenUserModal(false);\r\n    }\r\n\r\n    const userModal = (\r\n        <div className={classes.root}>\r\n            <FaceIcon className={classes.faceIcon}/>\r\n            <div className={classes.container}>\r\n                <div className={classes.userInfo}>\r\n                    <Typography className={classes.header}>ID</Typography>\r\n                    <Typography className={classes.info}>{allUsersInfo.id}</Typography>\r\n                </div>\r\n                <div className={classes.userInfo}>\r\n                    <Typography className={classes.header}>Name</Typography>\r\n                    <Typography className={classes.info}>{userInfoName}</Typography>\r\n                </div>\r\n                <div className={classes.userInfo}>\r\n                <Typography className={classes.header}>Email</Typography>\r\n                <Typography className={classes.info}>{allUsersInfo.email}</Typography>\r\n                </div>\r\n            </div>\r\n            <div className={classes.buttonContainer}>\r\n                <button className={classes.button}>Invite to Channel</button>\r\n                <button className={classes.button}>Message</button>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n    return (\r\n        <div>\r\n            <Modal open={openUserModal} onClose={handleUserModal}>\r\n                {userModal}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllUserSearch\r\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport AddChannelModal from \"../Channel/AddChannelModal\";\r\nimport HomeChannel from \"../Channel/HomeChannel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Logo from \"../../assets/images/Logo.svg\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Channel from \"../Channel/Channel\";\r\nimport { ContextAPI } from \"../Context/ContextAPi\";\r\nimport UserSearch from \"../UserSearch/UserSearch\";\r\nimport MyAccount from \"../Modal/MyAccount\";\r\nimport DirectMessage from \"../Modal/DirectMessage\";\r\nimport Message from \"../UserMessage/Message\";\r\nimport AllUserSearch from \"../Modal/AllUserSearch\";\r\n\r\nconst drawerWidth = 325;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100vw\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    borderRight: \"1px solid rgba(220, 229, 242, 0.15)\",\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100%) - ${drawerWidth}px`,\r\n      paddingLeft: drawerWidth,\r\n    },\r\n    background:\r\n      \"linear-gradient(to right bottom, rgba(26, 51, 90, 1), rgba(40, 69, 114, 1))\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    background:\r\n      \"linear-gradient(to bottom, rgba(26, 51, 90, 1), rgba(40, 69, 114, 1))\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  menuBarText: {\r\n    color: \"white\",\r\n    fontSize: \"1.8rem\",\r\n  },\r\n  menuBarTitle: {\r\n    color: \"#F9F3F3\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"3em\",\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingBottom: \"2rem\",\r\n  },\r\n  createIcon: {\r\n    color: \"#324A5F\",\r\n  },\r\n  menuIconColor: {\r\n    color: \"white\",\r\n    marginLeft: \"1em\",\r\n    marginRight: \"-1.4em\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"#051D43\",\r\n    paddingLeft: \"1.1rem\",\r\n    borderRadius: \"5px\",\r\n    width: \"100%\",\r\n    color: \"#3A66AA\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  accountIcon: {\r\n    height: \"2rem\",\r\n    width: \"2rem\",\r\n    marginRight: \"1rem\",\r\n    backgroundColor: \"lightcoral\",\r\n  },\r\n  subMessages: {\r\n    marginLeft: \"2.5em\",\r\n    marginTop: 0,\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n  },\r\n  workspace: {\r\n    borderRight: \"1px solid rgba(220, 229, 242, 0.15)\",\r\n    paddingTop: \"7.5em\",\r\n    width: \"24%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  workspaceItem: {\r\n    height: \"3em\",\r\n    width: \"3em\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"7px\",\r\n    backgroundColor: \"#051D43\",\r\n    cursor: \"pointer\",\r\n    marginTop: \"6em\",\r\n  },\r\n  mainContent: {\r\n    marginTop: \"10.5em\",\r\n    height: \"70%\",\r\n    width: \"100%\",\r\n    overflowY: \"auto\",\r\n  },\r\n  searchIcon: {\r\n    marginRight: \"0\",\r\n    color: \"#3A66AA\",\r\n  },\r\n  logoContainer: {\r\n    position: \"absolute\",\r\n    background: \"inherit\",\r\n    width: \"100%\",\r\n    height: \"15%\",\r\n    zIndex: \"10\",\r\n  },\r\n  logo: {\r\n    height: \"8.5em\",\r\n    width: \"10.5em\",\r\n    position: \"absolute\",\r\n    marginLeft: \"5.7em\",\r\n    marginTop: \"2.2em\",\r\n  },\r\n  addChannel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: \"1.5em\",\r\n    fontSize: \"0.9rem\",\r\n    height: \"1em\",\r\n  },\r\n  userDM: {\r\n    fontSize: \"0.95rem\",\r\n    fontWeight: \"lighter\",\r\n    marginLeft: \"-1rem\",\r\n    paddingTop: \"-1rem\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  channelList: {\r\n    fontSize: \"0.95rem\",\r\n    marginLeft: \"-5.85rem\",\r\n    fontWeight: \"lighter\",\r\n  },\r\n  addIcon: {\r\n    height: \"1.2em\",\r\n    width: \"1.2em\",\r\n    color: \"#3A66AA\",\r\n  },\r\n  mySpace: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    height: \"2em\",\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n  },\r\n  myAccount: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginLeft: \"3em\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst Main = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const {\r\n    allChannels,\r\n    setAllChannels,\r\n    allUsers,\r\n    setAllUsers,\r\n    apiData,\r\n    setApiData,\r\n    apiHeaders,\r\n    setApiHeaders,\r\n    auth,\r\n    setAuth,\r\n    authKey,\r\n    setAuthKey,\r\n    channelData,\r\n    setChannelData,\r\n    channelID,\r\n    setchannelID,\r\n    channelMembers,\r\n    setChannelMembers,\r\n    channelMessage,\r\n    setchannelMessage,\r\n    fetchFilterMembers,\r\n    setFetchFilterMembers,\r\n    setMessages,\r\n    messageDisplay,\r\n    setMessageDisplay,\r\n    tokenValue,\r\n    setTokenValue,\r\n    userName /* Integrate to localstorage to avoid losing userdata on refresh */,\r\n    setUserName,\r\n  } = useContext(ContextAPI);\r\n\r\n  //Setting states\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [channelExpand, setChannelExpand] = useState(false);\r\n  const [dmExpand, setDmExpand] = useState(false);\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const [searchBar, setSearchBar] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState(false);\r\n  //state for the modal open\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [profileModalOpen, setProfileModalOpen] = useState(false);\r\n  const [sendMessageModalOpen, setSendMessageModalOpen] = useState(false);\r\n  //declaring state to open modal for individual user information\r\n  const [openUserModal, setOpenUserModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const sessionKey = JSON.parse(localStorage.getItem(\"userKey\"));\r\n    setAuthKey(sessionKey);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"https://slackapi.avionschool.com/api/v1/channels\",\r\n      headers: {\r\n        \"access-token\": authKey.accessToken,\r\n        client: authKey.accessClient,\r\n        expiry: authKey.accessExpiry,\r\n        uid: authKey.accessUID,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setAllChannels([...res.data.data]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [channelExpand]);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"https://slackapi.avionschool.com/api/v1/users\",\r\n      headers: {\r\n        \"access-token\": authKey.accessToken,\r\n        client: authKey.accessClient,\r\n        expiry: authKey.accessExpiry,\r\n        uid: authKey.accessUID,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setAllUsers(res.data.data);\r\n        localStorage.setItem(\"allUsers\", JSON.stringify(allUsers));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [authKey]);\r\n\r\n  //Retrieving information of a Channel\r\n  useEffect(() => {\r\n    if (channelID === \"\") return;\r\n    else {\r\n      axios({\r\n        method: \"GET\",\r\n        url: `https://slackapi.avionschool.com/api/v1/channels/${channelID}`,\r\n        headers: {\r\n          \"access-token\": authKey.accessToken,\r\n          client: authKey.accessClient,\r\n          expiry: authKey.accessExpiry,\r\n          uid: authKey.accessUID,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          const members = res.data.data.channel_members;\r\n          setChannelMembers(members);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [channelID]);\r\n\r\n  //Function to handle expansion of Channel\r\n  const handleChannelExpandToggle = () => {\r\n    setChannelExpand(!channelExpand);\r\n    setMessageDisplay(false);\r\n  };\r\n  //Function to handle expansion of Direct Messages\r\n  const handleDmExpandToggle = () => {\r\n    setDmExpand(!dmExpand);\r\n    setMessageDisplay(false);\r\n  };\r\n\r\n  //Function to handle toggle of side menu bar on mobile screensize\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleMessageDisplayClose = () => {\r\n    setMessageDisplay(false);\r\n  };\r\n\r\n  //Function to handle values in searchbar\r\n  const handleSearchBarValue = (e) => {\r\n    setSearchBar(e.target.value);\r\n    if (!searchBar) {\r\n      setSearchResult(true);\r\n    }\r\n  };\r\n\r\n  //function to handle open of Send Message Modal\r\n  const handleSendMessageModal = () => {\r\n    setSendMessageModalOpen(true);\r\n  };\r\n\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const openMyProfile = () => {\r\n    setProfileModalOpen(true);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const logOut = () => {\r\n    localStorage.removeItem(\"userKey\");\r\n    setAuth(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const userDM = (\r\n    <div className={classes.subMessages}>\r\n      <Typography\r\n        onClick={handleSendMessageModal}\r\n        className={classes.userDM}\r\n        variant=\"subtitle1\"\r\n      >\r\n        <AddIcon />\r\n        Send Message\r\n      </Typography>\r\n    </div>\r\n  );\r\n\r\n  const channelList = (\r\n    <div className={classes.subMessages}>\r\n      <Typography className={classes.channelList} variant=\"subtitle1\">\r\n        # My Space\r\n      </Typography>\r\n    </div>\r\n  );\r\n\r\n  // Defining the structure for the drawer menu\r\n  const drawer = (\r\n    <div className={classes.drawer}>\r\n      <div className={classes.workspace}>\r\n        <div className={classes.workspaceItem}>\r\n          <AddIcon className={classes.addIcon} />\r\n        </div>\r\n      </div>\r\n      <div className={classes.logoContainer}>\r\n        <img className={classes.logo} src={Logo} alt=\"logo\" />\r\n      </div>\r\n      <Router>\r\n        <div className={`${classes.mainContent} sideBarScroll`}>\r\n          <List style={{ color: \"white\", marginTop: \"2em\" }}>\r\n            <ListItem button style={{}}>\r\n              <ListItemIcon className={classes.menuIconColor}>\r\n                <QuestionAnswerIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Threads\" />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.menuIconColor}>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"All DMs\" />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.menuIconColor}>\r\n                <AlternateEmailIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Mentions\" />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.menuIconColor}>\r\n                <MoreHorizIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"More\" />\r\n            </ListItem>\r\n            <ListItem onClick={handleChannelExpandToggle} button>\r\n              <ListItemIcon className={classes.menuIconColor}>\r\n                {channelExpand ? <ExpandMore /> : <ChevronRightIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Channels\" />\r\n            </ListItem>\r\n            <Collapse in={channelExpand} timeout=\"auto\" unmountOnExit>\r\n              <List style={{ marginTop: \"-0.8em\" }}>\r\n                <Link\r\n                  style={{ textDecoration: \"none\" }}\r\n                  to=\"/dashboard/my-space\"\r\n                >\r\n                  <ListItem\r\n                    onClick={handleMessageDisplayClose}\r\n                    className={classes.mySpace}\r\n                    button\r\n                  >\r\n                    {channelList}\r\n                  </ListItem>\r\n                </Link>\r\n                {allChannels.map((val, key) => {\r\n                  const getChannelData = (e) => {\r\n                    setChannelData(val);\r\n                    setFetchFilterMembers(!fetchFilterMembers);\r\n                    setchannelID(val.id);\r\n                    setMessageDisplay(false);\r\n                  };\r\n                  return (\r\n                    <Link\r\n                      key={key}\r\n                      style={{ textDecoration: \"none\" }}\r\n                      to={`/dashboard/channel/${val.id}`}\r\n                    >\r\n                      <ListItem\r\n                        key={key}\r\n                        onClick={getChannelData}\r\n                        className={classes.subMessages}\r\n                        button\r\n                      >\r\n                        {`# ${val.name}`}\r\n                      </ListItem>\r\n                    </Link>\r\n                  );\r\n                })}\r\n                <ListItem button onClick={() => setModalOpen(!modalOpen)}>\r\n                  <Typography className={classes.addChannel}>\r\n                    <AddIcon />\r\n                    Add Channel\r\n                  </Typography>\r\n                </ListItem>\r\n              </List>\r\n            </Collapse>\r\n            <ListItem onClick={handleDmExpandToggle} button>\r\n              <ListItemIcon className={classes.menuIconColor}>\r\n                {dmExpand ? <ExpandMore /> : <ChevronRightIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Direct Messages\" />\r\n            </ListItem>\r\n            <Collapse\r\n              style={{ marginTop: \"-1rem\" }}\r\n              in={dmExpand}\r\n              timeout=\"auto\"\r\n              unmountOnExit\r\n            >\r\n              <List>\r\n                <ListItem button>{userDM}</ListItem>\r\n              </List>\r\n            </Collapse>\r\n          </List>\r\n        </div>\r\n        <Switch>\r\n          <Route path=\"/dashboard/channel\" component={Channel} />\r\n          <Route path=\"/dashboard/message\" component={Message} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n\r\n  return auth ? (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <AppBar className={classes.appBar} elevation={0}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <Grid item xs={2}>\r\n              <IconButton\r\n                className={classes.menuButton}\r\n                onClick={handleDrawerToggle}\r\n              >\r\n                <MenuIcon style={{ color: \"#ECF0F1\" }} />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              <div>\r\n                <InputBase\r\n                  className={classes.input}\r\n                  placeholder=\"Search\"\r\n                  value={searchBar}\r\n                  onChange={handleSearchBarValue}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon className={classes.searchIcon} />\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n                {searchBar ? (\r\n                  <UserSearch\r\n                    openUserModal={openUserModal}\r\n                    setOpenUserModal={setOpenUserModal}\r\n                    setSearchBar={setSearchBar}\r\n                    searchResult={searchResult}\r\n                    searchBar={searchBar}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className={classes.myAccount}\r\n              onClick={handleMenuClick}\r\n              item\r\n              xs={2}\r\n            >\r\n              <Avatar\r\n                className={classes.accountIcon}\r\n                alt={userName}\r\n                src=\"/broken-image.jpg\"\r\n              />\r\n              <Typography variant=\"body1\">{userName}</Typography>\r\n            </Grid>\r\n            <Menu\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              style={{ marginTop: \"2em\", marginLeft: \"6em\" }}\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleMenuClose}\r\n            >\r\n              <MenuItem onClick={openMyProfile}>My Profile</MenuItem>\r\n              <MenuItem onClick={logOut}>Log out</MenuItem>\r\n            </Menu>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Grid>\r\n\r\n      <div>\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"temporary\"\r\n            anchor=\"left\"\r\n            ModalProps={{\r\n              keepMounted: true,\r\n            }}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </div>\r\n      {modalOpen ? (\r\n        <AddChannelModal setModalOpen={modalOpen} closeModal={setModalOpen} />\r\n      ) : null}\r\n      {}\r\n      <MyAccount\r\n        profileModalOpen={profileModalOpen}\r\n        setProfileModalOpen={setProfileModalOpen}\r\n      />\r\n      {messageDisplay ? <Message /> : <HomeChannel />}\r\n      {sendMessageModalOpen ? (\r\n        <DirectMessage\r\n          sendMessageModalOpen={sendMessageModalOpen}\r\n          setSendMessageModalOpen={setSendMessageModalOpen}\r\n        />\r\n      ) : null}\r\n      {openUserModal ? (\r\n        <AllUserSearch\r\n          openUserModal={openUserModal}\r\n          setOpenUserModal={setOpenUserModal}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Main;\r\n","import { useRef, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { callAPI } from \"../API/callAPI\";\r\nimport validator from \"validator\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  makeStyles,\r\n  Snackbar,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CatBG from \"../../assets/images/CatBG.jpg\";\r\nimport TMiBot from \"../../assets/images/TMiBot.svg\";\r\nimport Sample from \"../../assets/images/sample.jpg\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  containerBackground: {\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"#F2ebdd\",\r\n    height: \"100vh\",\r\n  },\r\n\r\n  sideImage: {\r\n    height: \"100vh\",\r\n    width: \"58vw\",\r\n  },\r\n\r\n  TMiBot: {\r\n    height: \"100px\",\r\n    width: \"100px\",\r\n  },\r\n\r\n  avatarOne: {\r\n    height: \"100px\",\r\n    width: \"100px\",\r\n  },\r\n\r\n  headerCreate: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: \"3.5em\",\r\n    fontWeight: \"bolder\",\r\n    textAlign: \"left\",\r\n    margin: \"15px\",\r\n  },\r\n\r\n  input: {\r\n    width: \"70%\",\r\n    margin: \"10px\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  newsletterContainer: {\r\n    direction: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  newsletter: {\r\n    margin: \"10px\",\r\n    fontSize: \"1.2em\",\r\n  },\r\n\r\n  buttonSignUp: {\r\n    margin: \"10px\",\r\n    fontSize: \"1.2em\",\r\n  },\r\n\r\n  errorMsg: {},\r\n\r\n  errorPass: {},\r\n\r\n  footerContainer: {\r\n    margin: \"10px\",\r\n    direction: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  footerOne: {\r\n    marginTop: \"10px\",\r\n    marginRight: \"10px\",\r\n    fontSize: \"1em\",\r\n  },\r\n\r\n  footerTwo: {\r\n    marginTop: \"10px\",\r\n    fontSize: \"1em\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst Registration = () => {\r\n  const classes = useStyles();\r\n\r\n  //declaring ref for inputs\r\n  const emailInput = useRef();\r\n  const passInput = useRef();\r\n  const confirmPassInput = useRef();\r\n\r\n  //declaring state to open success snackbar\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  //declaring states to handle error\r\n  const [errorPass, setErrorPass] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  //declaring states to handleinput values\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  //history to push on the next route\r\n  const history = useHistory();\r\n\r\n  const toLogin = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleErrorClose = (event, reason) => {\r\n    if (reason == \"clickaway\") {\r\n      return;\r\n    }\r\n    setError(false);\r\n    setErrorMsg([]);\r\n  };\r\n\r\n  const handleSuccessClose = (event, reason) => {\r\n    if (reason == \"clickaway\") {\r\n      return;\r\n    }\r\n    setSuccess(false);\r\n  };\r\n\r\n  const handleCreateAcct = () => {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"https://slackapi.avionschool.com/api/v1/auth\",\r\n      data: {\r\n        email: email,\r\n        password: password,\r\n        password_confirmation: confirmPassword,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setSuccess(true);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        const { errors } = err.response.data;\r\n        setErrorMsg(errors.full_messages);\r\n        setError(!error);\r\n      });\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n  };\r\n  console.log(\"errorMsg\");\r\n  console.log(errorMsg);\r\n  return (\r\n    <Grid container className={classes.containerBackground}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        sx={{ height: \"100vh\" }}\r\n      >\r\n        <Grid item xs={false} sm={4} md={7} sx={{}}>\r\n          <img src={CatBG} alt=\"sample\" className={classes.sideImage} />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={8} md={5} square>\r\n          <Box\r\n            sx={{\r\n              my: 8,\r\n              mx: 5,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Avatar className={classes.avatarOne}>\r\n              <img src={TMiBot} alt=\"sample\" className={classes.TMiBot} />\r\n            </Avatar>\r\n\r\n            <Typography className={classes.headerCreate}>\r\n              Create Account\r\n            </Typography>\r\n\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              variant=\"outlined\"\r\n              id=\"email-register\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              ref={emailInput}\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className={classes.input}\r\n            />\r\n\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              variant=\"outlined\"\r\n              id=\"password-register\"\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              ref={passInput}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className={classes.input}\r\n            />\r\n\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              variant=\"outlined\"\r\n              id=\"confpassword-register\"\r\n              name=\"password\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              ref={confirmPassInput}\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              className={classes.input}\r\n            />\r\n\r\n            <Grid container className={classes.newsletterContainer}>\r\n              <FormControlLabel control={<Checkbox />} />\r\n              <Typography className={classes.newsletter}>\r\n                I want to receive updates via email.\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              className={classes.buttonSignUp}\r\n              onClick={(e) => handleCreateAcct(e)}\r\n            >\r\n              {\" \"}\r\n              SIGN UP{\" \"}\r\n            </Button>\r\n\r\n            <Grid container className={classes.footerContainer}>\r\n              <Typography className={classes.footerOne}>\r\n                {\" \"}\r\n                Already have an account?{\" \"}\r\n              </Typography>\r\n              <Typography\r\n                onClick={toLogin}\r\n                className={classes.footerTwo}\r\n                href=\"#\"\r\n                rel=\"\"\r\n              >\r\n                {\" \"}\r\n                Sign in\r\n              </Typography>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={error}\r\n        autoHideDuration={4000}\r\n        onClose={handleErrorClose}\r\n      >\r\n        <Alert severity=\"error\" variant=\"filled\">\r\n          {errorMsg[0]}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={success}\r\n        autoHideDuration={4000}\r\n        onClose={handleSuccessClose}\r\n      >\r\n        <Alert severity=\"success\" variant=\"filled\">\r\n          Account successfully created!\r\n        </Alert>\r\n      </Snackbar>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import { useContext, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { ContextAPI } from \"./Components/Context/ContextAPi\";\r\nimport Channel from \"./Components/Channel/Channel\";\r\nimport HomeChannel from \"./Components/Channel/HomeChannel\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport Main from \"./Components/Main/Main\";\r\nimport Message from \"./Components/UserMessage/Message\";\r\nimport Registration from \"./Components/Registration/Registration\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [allChannels, setAllChannels] = useState([]);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [allUsersInfo, setAllUsersInfo] = useState();\r\n  const [apiData, setApiData] = useState([]);\r\n  const [apiHeaders, setApiHeaders] = useState();\r\n  const [auth, setAuth] = useState(false);\r\n  const [authKey, setAuthKey] = useState([]);\r\n  const [fetchFilterMembers, setFetchFilterMembers] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [tokenValue, setTokenValue] = useState();\r\n  const [channelData, setChannelData] = useState();\r\n  const [channelID, setchannelID] = useState(\"\");\r\n  const [channelMessage, setchannelMessage] = useState([]);\r\n  const [channelMembers, setChannelMembers] = useState([]);\r\n  const [messageDisplay, setMessageDisplay] = useState(false);\r\n  const [userMessages, setUserMessages] = useState([]);\r\n  const [userName, setUserName] = useState([]);\r\n  const [receiverID, setReceiverID] = useState(\"\");\r\n  const [receiverUN, setReceiverUN] = useState(\"\");\r\n\r\n  const [user, setUser] = useState(localStorage.getItem(\"user\"));\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ContextAPI.Provider\r\n        value={{\r\n          allChannels,\r\n          setAllChannels,\r\n          allUsers,\r\n          setAllUsers,\r\n          allUsersInfo,\r\n          setAllUsersInfo,\r\n          apiData,\r\n          setApiData,\r\n          apiHeaders,\r\n          setApiHeaders,\r\n          auth,\r\n          setAuth,\r\n          authKey,\r\n          setAuthKey,\r\n          channelData,\r\n          setChannelData,\r\n          channelID,\r\n          setchannelID,\r\n          channelMembers,\r\n          setChannelMembers,\r\n          channelMessage,\r\n          setchannelMessage,\r\n          fetchFilterMembers,\r\n          setFetchFilterMembers,\r\n          messages,\r\n          setMessages,\r\n          messageDisplay,\r\n          setMessageDisplay,\r\n          tokenValue,\r\n          setTokenValue,\r\n          userMessages,\r\n          setUserMessages,\r\n          userName,\r\n          setUserName,\r\n          receiverID,\r\n          setReceiverID,\r\n          receiverUN,\r\n          setReceiverUN,\r\n        }}\r\n      >\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Login}>\r\n              <Login setUser={setUser} />\r\n            </Route>\r\n            <Route path=\"/dashboard/channel\" component={Channel} />\r\n            <Route path=\"/dashboard/message\" component={Message} />\r\n            <Route path=\"/register\" component={Registration} />\r\n            <Route path=\"/dashboard\" component={Main} />\r\n            <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\r\n          </Switch>\r\n        </Router>\r\n      </ContextAPI.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route path=\"/\" component={App} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}